	.file	"hello.c"                       ; Исходный файл "hello.c"
	.globl	n                               ; Глобальное объявление переменной n
	.data                                   ; Начало секции .data
	.align 4                                ; Выравнивание по 4 байта
	.type	n, @object                      ; Определение типа переменной n
	.size	n, 4                            ; Определение размера переменной n (4 байта)
n:                                              ; Метка переменной n
	.long	10                              ; Значение переменной n (целое число 10)
	.section	.rodata                 ; Начало секции .rodata (только для чтения)
.LC0:                                           ; Метка .LC0
	.string	"Hello, World!"                 ; Строка "Hello, World!"
.LC1:                                           ; Метка .LC1
	.string	"Factorial of %i is %i\n"       ; Строка "Factorial of %i is %i\n"    
	.text                                   ; Начало секции .text
	.globl	main                            ; Глобальное объявление функции main
	.type	main, @function                 ; Определение типа функции main
main:                                           ; Метка функции main
.LFB0:                                          ; Метка начала базового блока .LFB0
	.cfi_startproc                          ; Начало записи директивы CFI для процедуры
	leal	4(%esp), %ecx                   ; Загрузка адреса первого аргумента в регистр %ecx
	.cfi_def_cfa 1, 0                       ; Определение новой формы фрейма стека
	andl	$-16, %esp                      ; Выравнивание указателя стека на границу 16 байт
	pushl	-4(%ecx)                        ; Помещение значения первого аргумента на стек
	pushl	%ebp                            ; Сохранение значения регистра %ebp на стеке
	.cfi_escape 0x10,0x5,0x2,0x75,0         ; Управление фреймом стека
	movl	%esp, %ebp                      ; Копирование текущего указателя стека в %ebp
	pushl	%ecx                            ; Сохранение значения регистра %ecx на стеке
	.cfi_escape 0xf,0x3,0x75,0x7c,0x6       ; Управление фреймом стека
	subl	$4, %esp                        ; Выделение места на стеке для локальных переменных
	subl	$12, %esp                       ; Выделение дополнительного места на стеке
	pushl	$.LC0                           ; Помещение адреса строки .LC0 на стек
	call	puts                            ; Вызов функции puts
	addl	$16, %esp                       ; Освобождение места на стеке
	movl	n, %eax                         ; Загрузка значения переменной n в регистр %eax
	subl	$12, %esp                       ; Выделение места на стеке для локальных переменных
	pushl	%eax                            ; Помещение значения регистра %eax на стек
	call	fact                            ; Вызов функции fact
	addl	$16, %esp                       ; Освобождение места на стеке
	movl	%eax, %edx                      ; Сохранение результата функции fact в регистр %edx
	movl	n, %eax                         ; Загрузка значения переменной n в регистр %eax
	subl	$4, %esp                        ; Выделение места на стеке для локальных переменных
	pushl	%edx                            ; Помещение значения регистра %edx на стек
	pushl	%eax                            ; Помещение значения регистра %eax на стек
	pushl	$.LC1                           ; Помещение адреса строки .LC1 на стек
	call	printf                          ; Вызов функции printf
	addl	$16, %esp                       ; Освобождение места на стеке
	movl	$0, %eax                        ; Загрузка значения 0 в регистр %eax
	movl	-4(%ebp), %ecx                  ; Восстановление значения регистра %ecx
	.cfi_def_cfa 1, 0                       ; Определение новой формы фрейма стека
	leave                                   ; Освобождение фрейма стека
	.cfi_restore 5                          ; Восстановление значения предыдущего указателя стека
	leal	-4(%ecx), %esp                  ; Установка указателя стека на предыдущее значение
	.cfi_def_cfa 4, 4                       ; Определение новой формы фрейма стека
	ret                                     ; Возврат из функции
	.cfi_endproc                            ; Конец записи директивы CFI для процедуры                                
.LFE0:                                          ; Метка конца базового блока .LFE0
	.size	main, .-main                    ; Определение размера функции main
	.ident	"GCC: (Ubuntu 4.9.2-10ubuntu13) 4.9.2"          ; Идентификатор компилятора
	.section	.note.GNU-stack,"",@progbits            ; Секция .note.GNU-stack, необходимая для стека GNU
